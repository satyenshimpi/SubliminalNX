/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingsForm.java
 *
 * Created on Jan 7, 2013, 1:31:18 PM
 */
package subliminal.ui;

import java.awt.Color;
import java.util.Enumeration;

import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JCheckBox;

import subliminal.common.Constants;
import subliminal.common.SettingsVariables;

/**
 *
 * @author Satyen S Shimpi
 */
public class SettingsForm extends javax.swing.JFrame {

	private static final long serialVersionUID = -6063149168112118168L;
	
	/** Creates new form SettingsForm */
    public SettingsForm() {
        initComponents();
        groupComponents();
        
        this.ColorChooserPanel.setColor(SettingsVariables.getInstance().getForeground());
        this.jFontChooser1.setSelectedFont(SettingsVariables.getInstance().getFont());
        this.spinnerSecs.setValue(SettingsVariables.getInstance().getDisplayEveryXXsecs());
        this.spinnerMiliSecs.setValue(SettingsVariables.getInstance().getDisplayTime());
        this.chkOnTop.setSelected(SettingsVariables.getInstance().getOnTop());
        this.sliderContrast.setValue(SettingsVariables.getInstance().getAlpa());
        
        //set the button as selected which is mentioned in settings
        Enumeration<AbstractButton> elements = null;
        if (true) {
            elements = this.grMsgPosition.getElements();
            while (elements.hasMoreElements()) {
                AbstractButton nextElement = elements.nextElement();
                if (SettingsVariables.getInstance().getMsgPosition().equals(nextElement.getText())) {
                    nextElement.setSelected(true);
                    break;
                }
            }
        } else { //or use this hardcoded way for setting radio button as selected
            this.radCenteredScreen.setSelected(SettingsVariables.getInstance().getMsgPosition().equals(radCenteredScreen.getText()));
            this.radLowerRHS.setSelected(SettingsVariables.getInstance().getMsgPosition().equals(radLowerRHS.getText()));
            this.radRandomScreen.setSelected(SettingsVariables.getInstance().getMsgPosition().equals(radRandomScreen.getText()));
        }
        elements = null;
        
        //set the button as selected which is mentioned in settings
        elements = this.grMsgOrder.getElements();
        while(elements.hasMoreElements()){
            AbstractButton nextElement = elements.nextElement();
            if(SettingsVariables.getInstance().getMsgOrder().equals(nextElement.getText())){
                nextElement.setSelected(true);
                break;
            }
        }
//        this.radOrdered.setSelected(settingsVariables.getInstance().getMsgOrder().equals(radOrdered.getText()));
//        this.radRandom.setSelected(settingsVariables.getInstance().getMsgOrder().equals(radRandom.getText()));
                
        //set the button as selected which is mentioned in settings
        elements = this.grMsgDisplay.getElements();
        while(elements.hasMoreElements()){
            AbstractButton nextElement = elements.nextElement();
            if(SettingsVariables.getInstance().getMsgDisplayType().equals(nextElement.getText())){
                nextElement.setSelected(true);
                break;
            }
        }
    }

    private void groupComponents() {
        grMsgOrder = new ButtonGroup();
        grMsgOrder.add(radOrdered);
        grMsgOrder.add(radRandom);
        
        grMsgPosition = new ButtonGroup();
        grMsgPosition.add(radCenteredScreen);
        grMsgPosition.add(radLowerRHS);
        grMsgPosition.add(radRandomScreen);
        
        grMsgDisplay = new ButtonGroup();
        grMsgDisplay.add(radMsgFlashing);
        grMsgDisplay.add(radMsgScroll);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneMain = new javax.swing.JTabbedPane();
        fontPanel = new javax.swing.JPanel();
        jFontChooser1 = new com.l2fprod.common.swing.JFontChooser();
        ColorChooserPanel = new javax.swing.JColorChooser();
        displaySettingPanel = new javax.swing.JPanel();
        panelFreqency = new javax.swing.JPanel();
        lblDisplayEvery = new javax.swing.JLabel();
        spinnerSecs = new javax.swing.JSpinner();
        lblEverySecs = new javax.swing.JLabel();
        lblForMili = new javax.swing.JLabel();
        lblMiliSecs = new javax.swing.JLabel();
        spinnerMiliSecs = new javax.swing.JSpinner();
        contrastPanel = new javax.swing.JPanel();
        sliderContrast = new javax.swing.JSlider();
        panelPosition = new javax.swing.JPanel();
        radRandomScreen = new javax.swing.JRadioButton();
        radCenteredScreen = new javax.swing.JRadioButton();
        radLowerRHS = new javax.swing.JRadioButton();
        lblMsgOrder = new javax.swing.JLabel();
        radOrdered = new javax.swing.JRadioButton();
        radRandom = new javax.swing.JRadioButton();
        chkOnTop = new javax.swing.JCheckBox();
        panelMsgType = new javax.swing.JPanel();
        radMsgFlashing = new javax.swing.JRadioButton();
        radMsgScroll = new javax.swing.JRadioButton();
        lblMsgWidth = new javax.swing.JLabel();
        lblMsgHeight = new javax.swing.JLabel();
        spinnerMsgWidth = new javax.swing.JSpinner();
        spinnerMsgHeight = new javax.swing.JSpinner();
        msgSettingPanel = new javax.swing.JPanel();
        msgTypePanel = new javax.swing.JPanel();
        programsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout fontPanelLayout = new javax.swing.GroupLayout(fontPanel);
        fontPanel.setLayout(fontPanelLayout);
        fontPanelLayout.setHorizontalGroup(
            fontPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fontPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFontChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        fontPanelLayout.setVerticalGroup(
            fontPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fontPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFontChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Font", fontPanel);
        jTabbedPaneMain.addTab("Colour", ColorChooserPanel);

        panelFreqency.setBorder(javax.swing.BorderFactory.createTitledBorder("Frequency"));

        lblDisplayEvery.setText("Display Every");

        spinnerSecs.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), null, Integer.valueOf(999), Integer.valueOf(1)));

        lblEverySecs.setText("seconds");

        lblForMili.setText("Display For");

        lblMiliSecs.setText("MiliSeconds");

        spinnerMiliSecs.setModel(new javax.swing.SpinnerNumberModel(1000, 500, 99999, 1));

        javax.swing.GroupLayout panelFreqencyLayout = new javax.swing.GroupLayout(panelFreqency);
        panelFreqency.setLayout(panelFreqencyLayout);
        panelFreqencyLayout.setHorizontalGroup(
            panelFreqencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFreqencyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFreqencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDisplayEvery)
                    .addGroup(panelFreqencyLayout.createSequentialGroup()
                        .addComponent(spinnerSecs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEverySecs))
                    .addComponent(lblForMili)
                    .addGroup(panelFreqencyLayout.createSequentialGroup()
                        .addComponent(spinnerMiliSecs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMiliSecs)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFreqencyLayout.setVerticalGroup(
            panelFreqencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFreqencyLayout.createSequentialGroup()
                .addComponent(lblDisplayEvery)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFreqencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerSecs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEverySecs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblForMili)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFreqencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerMiliSecs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMiliSecs))
                .addGap(0, 52, Short.MAX_VALUE))
        );

        contrastPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Contrast"));

        sliderContrast.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderContrast.setPaintLabels(true);
        sliderContrast.setPaintTicks(true);

        javax.swing.GroupLayout contrastPanelLayout = new javax.swing.GroupLayout(contrastPanel);
        contrastPanel.setLayout(contrastPanelLayout);
        contrastPanelLayout.setHorizontalGroup(
            contrastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contrastPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sliderContrast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contrastPanelLayout.setVerticalGroup(
            contrastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contrastPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sliderContrast, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelPosition.setBorder(javax.swing.BorderFactory.createTitledBorder("Position\\Location"));

        radRandomScreen.setText(Constants.MSG_RANDOM_ON_SCREEN);

        radCenteredScreen.setText(Constants.MSG_CENTERED_ON_SCREEN);

        radLowerRHS.setText(Constants.MSG_LRHS_ON_SCREEN);

        lblMsgOrder.setText("Message Order");

        radOrdered.setText(Constants.MSG_ORDERED);

        radRandom.setText(Constants.MSG_RANDOM);

        javax.swing.GroupLayout panelPositionLayout = new javax.swing.GroupLayout(panelPosition);
        panelPosition.setLayout(panelPositionLayout);
        panelPositionLayout.setHorizontalGroup(
            panelPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPositionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radRandom)
                    .addComponent(lblMsgOrder)
                    .addComponent(radRandomScreen)
                    .addComponent(radCenteredScreen)
                    .addComponent(radLowerRHS)
                    .addComponent(radOrdered))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        panelPositionLayout.setVerticalGroup(
            panelPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPositionLayout.createSequentialGroup()
                .addComponent(radRandomScreen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radCenteredScreen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radLowerRHS)
                .addGap(18, 18, 18)
                .addComponent(lblMsgOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radOrdered)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radRandom)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        chkOnTop.setText("Always on top");
        chkOnTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkOnTopActionPerformed(evt);
            }
        });

        panelMsgType.setBorder(javax.swing.BorderFactory.createTitledBorder("Message Display"));

        radMsgFlashing.setText(Constants.MSG_DISPLAY_TYPE_FLSHNIG);

        radMsgScroll.setText(Constants.MSG_DISPLAY_TYPE_SCROLLING);

        lblMsgWidth.setText("Width");

        lblMsgHeight.setText("Height");

        spinnerMsgWidth.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), null, Integer.valueOf(999), Integer.valueOf(1)));

        spinnerMsgHeight.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), null, Integer.valueOf(999), Integer.valueOf(1)));

        javax.swing.GroupLayout panelMsgTypeLayout = new javax.swing.GroupLayout(panelMsgType);
        panelMsgType.setLayout(panelMsgTypeLayout);
        panelMsgTypeLayout.setHorizontalGroup(
            panelMsgTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMsgTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMsgTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radMsgFlashing)
                    .addComponent(radMsgScroll)
                    .addGroup(panelMsgTypeLayout.createSequentialGroup()
                        .addGroup(panelMsgTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMsgWidth)
                            .addComponent(lblMsgHeight))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelMsgTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerMsgHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinnerMsgWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMsgTypeLayout.setVerticalGroup(
            panelMsgTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMsgTypeLayout.createSequentialGroup()
                .addComponent(radMsgFlashing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radMsgScroll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMsgTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMsgWidth)
                    .addComponent(spinnerMsgWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelMsgTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerMsgHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMsgHeight))
                .addContainerGap())
        );

        javax.swing.GroupLayout displaySettingPanelLayout = new javax.swing.GroupLayout(displaySettingPanel);
        displaySettingPanel.setLayout(displaySettingPanelLayout);
        displaySettingPanelLayout.setHorizontalGroup(
            displaySettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displaySettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displaySettingPanelLayout.createSequentialGroup()
                        .addGroup(displaySettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(displaySettingPanelLayout.createSequentialGroup()
                                .addComponent(contrastPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(panelFreqency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panelMsgType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(panelPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displaySettingPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chkOnTop)))
                .addContainerGap())
        );
        displaySettingPanelLayout.setVerticalGroup(
            displaySettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySettingPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(displaySettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displaySettingPanelLayout.createSequentialGroup()
                        .addComponent(panelPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(chkOnTop))
                    .addGroup(displaySettingPanelLayout.createSequentialGroup()
                        .addGroup(displaySettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelFreqency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contrastPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelMsgType, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPaneMain.addTab("Display Settings", displaySettingPanel);

        msgTypePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Message Type"));

        javax.swing.GroupLayout msgTypePanelLayout = new javax.swing.GroupLayout(msgTypePanel);
        msgTypePanel.setLayout(msgTypePanelLayout);
        msgTypePanelLayout.setHorizontalGroup(
            msgTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 556, Short.MAX_VALUE)
        );
        msgTypePanelLayout.setVerticalGroup(
            msgTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout msgSettingPanelLayout = new javax.swing.GroupLayout(msgSettingPanel);
        msgSettingPanel.setLayout(msgSettingPanelLayout);
        msgSettingPanelLayout.setHorizontalGroup(
            msgSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgSettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(msgTypePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        msgSettingPanelLayout.setVerticalGroup(
            msgSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgSettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(msgTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Message Settings", msgSettingPanel);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Program to display"));

        btnNew.setText("New");

        btnEdit.setText("Edit");

        btnDelete.setText("Delete");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(475, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout programsPanelLayout = new javax.swing.GroupLayout(programsPanel);
        programsPanel.setLayout(programsPanelLayout);
        programsPanelLayout.setHorizontalGroup(
            programsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(programsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        programsPanelLayout.setVerticalGroup(
            programsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(programsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneMain.addTab("Programs", programsPanel);

        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMain)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPaneMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        jTabbedPaneMain.getAccessibleContext().setAccessibleName("Message");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        //save setting variables
        int contrast = this.sliderContrast.getValue();
        SettingsVariables.getInstance().setAlpa(contrast);
//        Settings.setAlpa(contrast);
        
        System.out.println("this.sliderContrast.getValue() "+ this.sliderContrast.getValue());
        
        SettingsVariables.getInstance().setBackground(Color.darkGray);
        System.out.println(this.jFontChooser1.getSelectedFont());
        SettingsVariables.getInstance().setFont(this.jFontChooser1.getSelectedFont());
//        Settings.setFont(this.jFontChooser1.getSelectedFont());
        
        int alpa= (255*contrast)/100;
        Color color = new Color(this.ColorChooserPanel.getColor().getRed(), 
                this.ColorChooserPanel.getColor().getGreen(), 
                this.ColorChooserPanel.getColor().getBlue(),
                alpa);
        SettingsVariables.getInstance().setForeground(color);
//        Settings.setForeground(color);
        
        SettingsVariables.getInstance().setDisplayEveryXXsecs((Integer)this.spinnerSecs.getValue());
//        Settings.setDisplayEveryXXsecs((Integer)this.spinnerSecs.getValue());
        SettingsVariables.getInstance().setDisplayTime((Integer)this.spinnerMiliSecs.getValue());
//        Settings.setDisplayTime((Integer)this.spinnerMiliSecs.getValue());
        SettingsVariables.getInstance().setOnTop(this.chkOnTop.isSelected());
//        Settings.setOnTop(this.chkOnTop.isSelected());
        
        Enumeration<AbstractButton> elements = this.grMsgPosition.getElements();
        while(elements.hasMoreElements()){
            AbstractButton nextElement = elements.nextElement();
//            System.out.println(nextElement.getText() + " - " + nextElement.isSelected());
            if(nextElement.isSelected()){
                SettingsVariables.getInstance().setMsgPosition(nextElement.getText());
//                Settings.setMsgPosition(nextElement.getText());
                break;
            }
        }
        
        elements = this.grMsgOrder.getElements();
        while(elements.hasMoreElements()){
            AbstractButton nextElement = elements.nextElement();
//            System.out.println(nextElement.getText() + " - " + nextElement.isSelected());
            if(nextElement.isSelected()){
                SettingsVariables.getInstance().setMsgOrder(nextElement.getText());
//                Settings.setMsgOrder(nextElement.getText());
                break;
            }
        }
        
        elements = this.grMsgDisplay.getElements();
        while(elements.hasMoreElements()){
            AbstractButton nextElement = elements.nextElement();
//            System.out.println(nextElement.getText() + " - " + nextElement.isSelected());
            if(nextElement.isSelected()){
                SettingsVariables.getInstance().setMsgDisplayType(nextElement.getText());
//                Settings.setMsgOrder(nextElement.getText());
                break;
            }
        }
        
        SettingsVariables.getInstance().setMsgHeight((Integer)this.spinnerMsgHeight.getValue());
        
        SettingsVariables.getInstance().setMsgWidth((Integer)this.spinnerMsgWidth.getValue());
        
        SettingsVariables.getInstance().serialize();
        this.dispose();
        System.out.println("calling init again.");
//        VisiblePane.getInstance().initSettings();
        VisiblePane.getInstance().setAlwaysOnTop(SettingsVariables.getInstance().getOnTop());
        
//        StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace();        
//        System.out.println(stackTraceElements[stackTraceElements.length-1].getClassName());
//        for (int i = stackTraceElements.length-1; i>0; i--) {
//            StackTraceElement elem = stackTraceElements[i];
//            System.out.println(elem.getClassName() + ":" + elem.getMethodName() +"<" + elem.getFileName() + ">");
//        }

    }//GEN-LAST:event_btnSaveMouseClicked

    private void chkOnTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkOnTopActionPerformed
        System.out.println(evt.getSource().getClass().getCanonicalName());
        ((JCheckBox)evt.getSource()).isSelected();
    }//GEN-LAST:event_chkOnTopActionPerformed

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnCancelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SettingsForm().setVisible(true);
            }
        });
    }
    
    ButtonGroup grMsgOrder;
    ButtonGroup grMsgPosition;
    ButtonGroup grMsgDisplay;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JColorChooser ColorChooserPanel;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkOnTop;
    private javax.swing.JPanel contrastPanel;
    private javax.swing.JPanel displaySettingPanel;
    private javax.swing.JPanel fontPanel;
    private com.l2fprod.common.swing.JFontChooser jFontChooser1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPaneMain;
    private javax.swing.JLabel lblDisplayEvery;
    private javax.swing.JLabel lblEverySecs;
    private javax.swing.JLabel lblForMili;
    private javax.swing.JLabel lblMiliSecs;
    private javax.swing.JLabel lblMsgHeight;
    private javax.swing.JLabel lblMsgOrder;
    private javax.swing.JLabel lblMsgWidth;
    private javax.swing.JPanel msgSettingPanel;
    private javax.swing.JPanel msgTypePanel;
    private javax.swing.JPanel panelFreqency;
    private javax.swing.JPanel panelMsgType;
    private javax.swing.JPanel panelPosition;
    private javax.swing.JPanel programsPanel;
    private javax.swing.JRadioButton radCenteredScreen;
    private javax.swing.JRadioButton radLowerRHS;
    private javax.swing.JRadioButton radMsgFlashing;
    private javax.swing.JRadioButton radMsgScroll;
    private javax.swing.JRadioButton radOrdered;
    private javax.swing.JRadioButton radRandom;
    private javax.swing.JRadioButton radRandomScreen;
    private javax.swing.JSlider sliderContrast;
    private javax.swing.JSpinner spinnerMiliSecs;
    private javax.swing.JSpinner spinnerMsgHeight;
    private javax.swing.JSpinner spinnerMsgWidth;
    private javax.swing.JSpinner spinnerSecs;
    // End of variables declaration//GEN-END:variables
}
